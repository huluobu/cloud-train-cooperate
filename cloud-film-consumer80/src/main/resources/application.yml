server:
  port: 8080
  servlet:
    context-path: /film


#eureka:
#  client:
#    register-with-eureka: true
#    fetch-registry: true
#    service-url:
#      defaultZone: http://localhost:7001/eureka/



spring:
  application:
    name: cloud-film-consumer
  profiles:
    active: prd

  cloud:
    consul:
      host: 59.110.48.246
      port: 8500
      discovery:
        prefer-ip-address: true
        service-name: ${spring.application.name}
        hostname: ${spring.cloud.client.ip-address}
        port: ${server.port}
        health-check-interval: 10s
        heartbeat:
          enabled: true
#    consul:
#      # 将服务注册到consul
#      host: 59.110.48.246
#      port: 8500
#      discovery:
#        heartbeat:
#
##        #是否需要注册
##        register: true
##        #注册的实例ID (唯一标志)
##        instance-id: ${spring.application.name}-1
#        #服务的名称
#        service-name: ${spring.application.name}
##        #服务的请求端口
##        port: ${server.port}
##        #指定开启ip地址注册
##        prefer-ip-address: true
##        #当前服务的请求ip
##        ip-address: ${spring.cloud.client.ip-address}

  datasource:
    username: root
    password: carrotsql321
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://59.110.48.246:3309/film?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    type: com.alibaba.druid.pool.DruidDataSource
    #   数据源其他配置
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
mybatis:
  # 指定全局配置文件位置
  config-location: classpath:mybatis/mybatis-config.xml
  # 指定sql映射文件位置
  mapper-locations: classpath:mybatis/mapper/*.xml

ribbon:
  consul:
    enable: true

management:
  endpoint:
    health:
      show-details: always
---
server:
  port: 8081
spring:
  profiles: dev
---
server:
  port: 8080
spring:
  profiles: prd
---